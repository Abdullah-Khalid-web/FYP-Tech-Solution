<style>
    :root {
        --primary-color: <%=shop.primary_color || '#007bff' %>;
        --danger-color: #dc3545;
    }

    .transaction-table th {
        background-color: #e9ecef;
        font-weight: 600;
        font-size: 0.85rem;
        padding: 0.5rem;
    }

    .transaction-table td {
        padding: 0.5rem;
        vertical-align: middle;
    }

    .summary-card {
        background-color: #f8f9fa;
        border-left: 4px solid var(--primary-color);
    }

    .return-item {
        background-color: #fff3cd;
    }

    .sale-item {
        background-color: #f8f9fa;
    }

    .quantity-controls {
        width: 120px;
    }

    .search-result-item {
        cursor: pointer;
        transition: background-color 0.2s;
    }

    .search-result-item:hover {
        background-color: #e9ecef;
    }

    .product-search-input {
        position: relative;
    }

    .search-results {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: white;
        border: 1px solid #dee2e6;
        border-top: none;
        border-radius: 0 0 0.375rem 0.375rem;
        max-height: 300px;
        overflow-y: auto;
        z-index: 1000;
        display: none;
    }

    .return-option-card {
        cursor: pointer;
        transition: all 0.3s ease;
    }

    .return-option-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .return-option-card.selected {
        border: 2px solid var(--primary-color);
    }

    .bill-item-card {
        border: 1px solid #dee2e6;
        border-radius: 0.375rem;
        margin-bottom: 0.5rem;
        padding: 0.75rem;
    }

    .custom-notification {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 9999;
        min-width: 300px;
    }

    .return-option-card {
        cursor: pointer;
        transition: all 0.3s ease;
        border: 2px solid transparent;
    }

    .return-option-card:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .return-option-card.selected {
        border: 2px solid var(--primary-color);
        background-color: #f8f9fa;
    }

    .return-quantity-control {
        background-color: #f8f9fa;
        padding: 10px;
        border-radius: 0.375rem;
        border-left: 3px solid var(--primary-color);
    }

    .quick-return-quantity {
        max-width: 60px;
    }

    @media print {
        .no-print {
            display: none !important;
        }

        body {
            background: white !important;
        }

        .container {
            max-width: none !important;
        }
    }
</style>
</head>

<body class="bg-light">
    <div class="container-fluid py-3">
        <!-- Header -->
        <div class="row mb-3">
            <div class="col-12">
                <div class="d-flex justify-content-between align-items-center">
                    <h2 class="mb-0"><i class="fas fa-cash-register me-2"></i>Sales & Returns</h2>
                    <div>
                        <a href="/ALLbills" class="btn btn-outline-primary me-2">
                            <i class="fas fa-list me-1"></i>All Bills
                        </a>
                        <!-- <button class="btn btn-success" onclick="printReceipt()" id="printBtn" style="display: none;">
                            <i class="fas fa-print me-1"></i>Print Receipt
                        </button> -->
                    </div>
                </div>
                <p class="text-muted mb-0">Process sales and returns with complete transaction management</p>
            </div>
        </div>

        <!-- Main Content -->
        <div class="row">
            <!-- Left Column - Customer & Products -->
            <div class="col-lg-8">
                <!-- Customer Information -->
                <div class="card mb-3">
                    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Customer Information</h5>
                        <button class="btn btn-sm btn-light" id="searchCustomerBtn">
                            <i class="fas fa-search me-1"></i>Find Previous Bills
                        </button>
                    </div>
                    <div class="card-body">
                        <div class="row g-2">
                            <div class="col-md-6">
                                <label class="form-label">Customer Name <small
                                        class="text-muted">(Optional)</small></label>
                                <input type="text" class="form-control" id="customerName"
                                    placeholder="Walk-in Customer">
                            </div>
                            <div class="col-md-6">
                                <label class="form-label">Phone Number <small
                                        class="text-muted">(Optional)</small></label>
                                <input type="text" class="form-control" id="customerPhone"
                                    placeholder="Enter phone number">
                            </div>
                        </div>
                        <div id="customerBillsSection" class="mt-3" style="display: none;">
                            <h6>Previous Bills</h6>
                            <div id="customerBillsList" class="small"></div>
                        </div>
                    </div>
                </div>

                <!-- Product Search and Selection -->
                <div class="card mb-3">
                    <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                        <h5 class="mb-0">Product Selection</h5>
                        <div>
                            <button class="btn btn-sm btn-light me-2" id="viewProductsBtn">
                                <i class="fas fa-boxes me-1"></i>View All Products
                            </button>
                            <button class="btn btn-sm btn-light" id="addReturnBtn">
                                <i class="fas fa-undo me-1"></i>Add Return
                            </button>
                        </div>
                    </div>
                    <div class="card-body">
                        <div class="mb-3 product-search-input">
                            <label class="form-label">Search Products</label>
                            <div class="input-group">
                                <input type="text" class="form-control" id="productSearch"
                                    placeholder="Search by product name, SKU, or brand">
                                <button class="btn btn-outline-secondary" type="button" id="scanBarcodeBtn">
                                    <i class="fas fa-barcode"></i>
                                </button>
                            </div>
                            <div class="search-results" id="searchResults"></div>
                        </div>

                        <!-- Transaction Items Table -->
                        <div class="table-responsive">
                            <table class="table table-sm table-hover transaction-table" id="transactionItems">
                                <thead class="table-light">
                                    <tr>
                                        <th width="5%">Type</th>
                                        <th width="25%">Product</th>
                                        <th width="10%">Price</th>
                                        <th width="10%">Qty</th>
                                        <th width="10%">Discount</th>
                                        <th width="10%">Tax</th>
                                        <th width="10%">Total</th>
                                        <th width="5%">Action</th>
                                    </tr>
                                </thead>
                                <tbody id="transactionItemsBody">
                                    <tr>
                                        <td colspan="8" class="text-center text-muted py-4">
                                            <i class="fas fa-shopping-cart fa-2x mb-2 d-block"></i>
                                            No items added to transaction
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Right Column - Summary -->
            <div class="col-lg-4">
                <div class="card summary-card sticky-top" style="top: 20px;">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">Transaction Summary</h5>
                    </div>
                    <div class="card-body">
                        <div class="row g-2 mb-3">
                            <div class="col-12">
                                <label class="form-label">Payment Method</label>
                                <select class="form-select" id="paymentMethod">
                                    <option value="cash" selected>Cash</option>
                                    <option value="card">Credit/Debit Card</option>
                                    <option value="mobile">Mobile Payment</option>
                                    <option value="bank">Bank Transfer</option>
                                </select>
                            </div>
                            <div class="col-12">
                                <label class="form-label">Amount Paid</label>
                                <input type="number" class="form-control" id="paymentAmount" value="0.00" min="0"
                                    step="0.01">
                            </div>
                            <div class="col-12">
                                <label class="form-label">Tax Amount (FBR)</label>
                                <input type="number" class="form-control" id="taxAmount" value="1.00" min="0"
                                    step="0.01">
                            </div>
                            <div class="col-12">
                                <label class="form-label">Additional Notes</label>
                                <textarea class="form-control" id="transactionNotes" rows="2"
                                    placeholder="Any additional notes"></textarea>
                            </div>
                        </div>

                        <div class="transaction-summary">
                            <div class="d-flex justify-content-between mb-2">
                                <span>Subtotal (Sales):</span>
                                <span id="summarySalesSubtotal">
                                    <%= shop.currency || '₹' %>0.00
                                </span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Subtotal (Returns):</span>
                                <span id="summaryReturnsSubtotal">
                                    <%= shop.currency || '₹' %>0.00
                                </span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Total Discount:</span>
                                <span id="summaryDiscount">-<%= shop.currency || '₹' %>0.00</span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Total Tax:</span>
                                <span id="summaryTax">
                                    <%= shop.currency || '₹' %>0.00
                                </span>
                            </div>
                            <hr>
                            <div class="d-flex justify-content-between fw-bold fs-5 mb-3">
                                <span>Net Amount:</span>
                                <span id="summaryTotal">
                                    <%= shop.currency || '₹' %>0.00
                                </span>
                            </div>
                            <div class="d-flex justify-content-between mb-2">
                                <span>Amount Paid:</span>
                                <span id="summaryPaid">
                                    <%= shop.currency || '₹' %>0.00
                                </span>
                            </div>
                            <div class="d-flex justify-content-between fw-bold text-success" id="changeSection">
                                <span>Change:</span>
                                <span id="summaryChange">
                                    <%= shop.currency || '₹' %>0.00
                                </span>
                            </div>
                            <div class="d-flex justify-content-between fw-bold text-danger" id="refundSection"
                                style="display: none;">
                                <span>Refund Due:</span>
                                <span id="summaryRefund">
                                    <%= shop.currency || '₹' %>0.00
                                </span>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <div class="row g-2 mt-3 no-print">
                            <div class="col-12">
                                <button class="btn btn-secondary w-100" id="clearTransactionBtn">
                                    <i class="fas fa-times me-2"></i> Clear Transaction
                                </button>
                            </div>
                            <div class="col-12">
                                <button class="btn btn-primary w-100" id="finalizeBtn">
                                    <i class="fas fa-check-circle me-2"></i> Finalize Transaction
                                </button>
                            </div>
                            <div class="col-12">
                                <button class="btn btn-warning w-100" onclick="printReceipt()" id="printBtn"
                                    style="display: none;">
                                    <i class="fas fa-print me-1"></i>Print Receipt
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Product List Modal -->
    <div class="modal fade" id="productListModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-xl">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Product Catalog</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="input-group mb-3">
                        <input type="text" class="form-control" placeholder="Search products..."
                            id="modalProductSearch">
                        <button class="btn btn-outline-primary" type="button" id="modalSearchBtn">
                            <i class="fas fa-search"></i>
                        </button>
                    </div>
                    <div class="table-responsive">
                        <table class="table table-hover table-sm">
                            <thead class="table-light">
                                <tr>
                                    <th>Product Name</th>
                                    <th>Brand</th>
                                    <th>SKU</th>
                                    <th>Price</th>
                                    <th>Stock</th>
                                    <th width="15%">Action</th>
                                </tr>
                            </thead>
                            <tbody id="modalProductsList">
                                <% products.forEach(product=> { %>
                                    <tr>
                                        <td>
                                            <%= product.name %>
                                        </td>
                                        <td>
                                            <%= product.brand || 'N/A' %>
                                        </td>
                                        <td>
                                            <%= product.sku %>
                                        </td>
                                        <td>
                                            <%= shop.currency || '₹' %>
                                                <%= product.selling_price %>
                                        </td>
                                        <td>
                                            <span
                                                class="badge <%= product.quantity > 10 ? 'bg-success' : product.quantity > 0 ? 'bg-warning' : 'bg-danger' %>">
                                                <%= product.quantity %>
                                            </span>
                                        </td>
                                        <td>
                                            <button class="btn btn-sm btn-primary add-product-modal"
                                                data-product-id="<%= product.id %>"
                                                data-product-name="<%= product.name %>"
                                                data-product-price="<%= product.selling_price %>"
                                                data-product-sku="<%= product.sku %>"
                                                data-product-stock="<%= product.quantity %>"
                                                data-product-brand="<%= product.brand || '' %>">
                                                <i class="fas fa-plus me-1"></i>Add
                                            </button>
                                        </td>
                                    </tr>
                                    <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Return Options Modal -->
    <div class="modal fade" id="returnOptionsModal" tabindex="-1" aria-hidden="true">
        <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Add Return Item</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <div class="row mb-4">
                        <div class="col-md-6">
                            <div class="card return-option-card h-100" id="returnWithBillCard">
                                <div class="card-body text-center">
                                    <i class="fas fa-receipt fa-3x text-primary mb-3"></i>
                                    <h5>Return with Bill Reference</h5>
                                    <p class="text-muted">Select items from a previous bill for return</p>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-6">
                            <div class="card return-option-card h-100" id="returnWithoutBillCard">
                                <div class="card-body text-center">
                                    <i class="fas fa-undo fa-3x text-warning mb-3"></i>
                                    <h5>Return without Bill</h5>
                                    <p class="text-muted">Add return items without bill reference</p>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Return with Bill Section -->
                    <div id="returnWithBillSection" style="display: none;">
                        <div class="mb-3">
                            <label class="form-label">Search Customer Bills</label>
                            <div class="input-group">
                                <input type="text" class="form-control" id="customerSearch"
                                    placeholder="Enter customer name or phone">
                                <button class="btn btn-outline-primary" type="button" id="searchCustomerBillsBtn">
                                    <i class="fas fa-search"></i> Search
                                </button>
                            </div>
                        </div>

                        <div id="customerBillsResults" style="display: none;">
                            <h6>Customer Bills</h6>
                            <div id="customerBillsListReturn" class="mb-3"></div>
                        </div>

                        <div id="billItemsSection" style="display: none;">
                            <h6>Select Items to Return</h6>
                            <div id="billItemsListReturn"></div>
                        </div>
                    </div>

                    <!-- Return without Bill Section -->
                    <div id="returnWithoutBillSection" style="display: none;">
                        <div class="alert alert-info">
                            <i class="fas fa-info-circle me-2"></i>
                            <strong>Quick Return:</strong> Search for products to return without bill reference
                        </div>

                        <div class="mb-3">
                            <label class="form-label">Search Products</label>
                            <div class="input-group">
                                <input type="text" class="form-control" id="returnProductSearch"
                                    placeholder="Search products by name, SKU, or brand">
                                <button class="btn btn-outline-primary" type="button" id="returnSearchBtn">
                                    <i class="fas fa-search"></i> Search
                                </button>
                            </div>
                        </div>

                        <div class="table-responsive" style="max-height: 400px; overflow-y: auto;">
                            <table class="table table-hover table-sm">
                                <thead class="table-light sticky-top">
                                    <tr>
                                        <th>Product</th>
                                        <th>Price</th>
                                        <th>Stock</th>
                                        <th width="120px">Qty</th>
                                        <th width="100px">Action</th>
                                    </tr>
                                </thead>
                                <tbody id="returnProductsList">
                                    <tr>
                                        <td colspan="5" class="text-center text-muted py-3">
                                            <i class="fas fa-search fa-2x mb-2 d-block"></i>
                                            Search for products to return
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="addSelectedReturnsBtn" style="display: none;">
                        <i class="fas fa-plus me-1"></i> Add Selected Returns
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Receipt Template (Hidden) -->
    <div id="receiptTemplate" style="display: none;"></div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize tooltips
            const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Image preview for add product form
            document.getElementById('productImage').addEventListener('change', function (e) {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (event) {
                        document.getElementById('imagePreview').src = event.target.result;
                        document.getElementById('imagePreviewContainer').style.display = 'block';
                    };
                    reader.readAsDataURL(file);
                } else {
                    document.getElementById('imagePreviewContainer').style.display = 'none';
                }
            });

            // Handle add product form submission
            document.getElementById('addProductForm').addEventListener('submit', function (e) {
                e.preventDefault();
                const formData = new FormData(this);

                fetch('/products', {
                    method: 'POST',
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            showToast('Product added successfully!', 'success');
                            $('#addProductModal').modal('hide');
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast(data.message || 'Error adding product', 'error');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        showToast('An error occurred', 'error');
                    });
            });

            // Handle edit product form submission
            document.getElementById('editProductForm').addEventListener('submit', function (e) {
                e.preventDefault();
                const formData = new FormData(this);
                const productId = document.getElementById('editProductId').value;

                fetch(`/products/${productId}`, {
                    method: 'PUT',
                    body: formData
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            showToast('Product updated successfully!', 'success');
                            $('#editProductModal').modal('hide');
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast(data.message || 'Error updating product', 'error');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        showToast('An error occurred', 'error');
                    });
            });

            // Handle edit product clicks
            document.querySelectorAll('.edit-product').forEach(button => {
                button.addEventListener('click', function () {
                    const productId = this.closest('tr').getAttribute('data-product-id');
                    loadProductForEdit(productId);
                });
            });

            // Handle add stock form submission
            document.getElementById('addStockForm').addEventListener('submit', function (e) {
                e.preventDefault();
                const formData = new FormData(this);

                // Include selling price in the form data if provided
                const newSellingPrice = document.getElementById('newSellingPrice').value;
                if (newSellingPrice) {
                    formData.append('selling_price', newSellingPrice);
                }

                fetch('/products/add-stock', {
                    method: 'POST',
                    body: new URLSearchParams(formData)
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            showToast('Stock and prices updated successfully!', 'success');
                            $('#addStockModal').modal('hide');
                            setTimeout(() => location.reload(), 1000);
                        } else {
                            showToast(data.message || 'Error updating stock', 'error');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        showToast('An error occurred', 'error');
                    });
            });

            // Handle add stock clicks
            document.querySelectorAll('.add-stock').forEach(button => {
                button.addEventListener('click', function () {
                    const row = this.closest('tr');
                    const productId = row.getAttribute('data-product-id');

                    // Get all product data from the table row
                    const productData = {
                        id: productId,
                        name: row.querySelector('td:nth-child(3)').textContent.trim(),
                        brand: row.querySelector('td:nth-child(3)').getAttribute('data-brand') || '',
                        category: row.querySelector('td:nth-child(5)').textContent.trim(),
                        size: row.querySelector('td:nth-child(5)').getAttribute('data-size') || '',
                        sku: row.querySelector('td:nth-child(4)').textContent.trim(),
                        currentStock: row.querySelector('td:nth-child(6)').textContent.trim(),
                        buyingPrice: row.querySelector('td:nth-child(7)').textContent.trim(),
                        sellingPrice: row.querySelector('td:nth-child(8)').textContent.trim()
                    };

                    // Populate the modal with product information
                    document.getElementById('stockProductId').value = productId;
                    document.getElementById('stockProductName').textContent = productData.name;
                    document.getElementById('stockProductBrand').textContent = productData.brand || 'N/A';
                    document.getElementById('stockProductCategory').textContent = productData.category || 'N/A';
                    document.getElementById('stockProductSize').textContent = productData.size || 'N/A';
                    document.getElementById('stockProductSku').textContent = productData.sku || 'N/A';
                    document.getElementById('currentStockBadge').textContent = productData.currentStock;
                    document.getElementById('currentBuyingPrice').value = productData.buyingPrice;
                    document.getElementById('currentSellingPrice').value = productData.sellingPrice;

                    // Clear input fields
                    document.getElementById('quantityToAdd').value = '';
                    document.getElementById('newBuyingPrice').value = '';
                    document.getElementById('newSellingPrice').value = '';

                    $('#addStockModal').modal('show');
                });
            });

            // Handle toggle status clicks
            document.querySelectorAll('.toggle-status').forEach(button => {
                button.addEventListener('click', function () {
                    const productId = this.closest('tr').getAttribute('data-product-id');
                    toggleProductStatus(productId);
                });
            });

            // Search functionality
            document.getElementById('productSearch').addEventListener('input', function () {
                filterProducts();
            });

            // Filter functionality
            document.getElementById('categoryFilter').addEventListener('change', function () {
                filterProducts();
            });

            document.getElementById('statusFilter').addEventListener('change', function () {
                filterProducts();
            });

            // Reset filters
            document.getElementById('resetFilters').addEventListener('click', function () {
                document.getElementById('productSearch').value = '';
                document.getElementById('categoryFilter').value = '';
                document.getElementById('statusFilter').value = '';
                filterProducts();
            });
        });

        function loadProductForEdit(productId) {
            // Show loading state
            const editModalBody = document.querySelector('#editProductModal .modal-body');
            editModalBody.innerHTML = `
        <div class="text-center py-4">
            <div class="spinner-border text-primary" role="status">
                <span class="visually-hidden">Loading...</span>
            </div>
            <p>Loading product details...</p>
        </div>
    `;

            $('#editProductModal').modal('show');

            fetch(`/products/${productId}/edit`)
                .then(response => {
                    if (!response.ok) {
                        throw new Error(`Server returned ${response.status}`);
                    }
                    return response.json();
                })
                .then(data => {
                    if (data.success && data.product) {
                        const product = data.product;
                        renderEditForm(product);
                    } else {
                        throw new Error(data.message || 'Error loading product');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    editModalBody.innerHTML = `
                <div class="alert alert-danger">
                    Failed to load product: ${error.message}
                </div>
                <div class="text-center mt-3">
                    <button class="btn btn-primary" onclick="loadProductForEdit('${productId}')">
                        <i class="fas fa-sync-alt me-2"></i>Try Again
                    </button>
                </div>
            `;
                });
        }

        function renderEditForm(product) {
            const editModalBody = document.querySelector('#editProductModal .modal-body');

            editModalBody.innerHTML = `
        <div class="row">
            <div class="col-md-6">
                <div class="mb-3">
                    <label for="editProductName" class="form-label">Product Name *</label>
                    <input type="text" class="form-control" id="editProductName" name="name" value="${escapeHtml(product.name || '')}" required>
                </div>
                <div class="mb-3">
                    <label for="editProductBrand" class="form-label">Brand</label>
                    <input type="text" class="form-control" id="editProductBrand" name="brand" value="${escapeHtml(product.brand || '')}">
                </div>
                <div class="mb-3">
                    <label for="editProductCategory" class="form-label">Category</label>
                    <input type="text" class="form-control" id="editProductCategory" name="category" value="${escapeHtml(product.category || '')}" list="categoryList">
                </div>
                <div class="mb-3">
                    <label for="editProductSize" class="form-label">Size</label>
                    <input type="text" class="form-control" id="editProductSize" name="size" value="${escapeHtml(product.size || '')}">
                </div>
                <div class="mb-3">
                    <label for="editMinStockAlert" class="form-label">Low Stock Alert Level</label>
                    <input type="number" class="form-control" id="editMinStockAlert" name="min_stock_alert" value="${product.min_stock_alert || 5}">
                </div>
            </div>
            <div class="col-md-6">
                <div class="mb-3">
                    <label for="editProductImage" class="form-label">Product Image</label>
                    <input type="file" class="form-control" id="editProductImage" name="image" accept="image/*">
                    ${product.image ? `
                        <div class="mt-2">
                            <img src="/uploads/${escapeHtml(product.image)}" alt="Current Image" style="max-height: 150px; max-width: 100%; border-radius: 0.375rem;">
                            <div class="form-check mt-2">
                                <input class="form-check-input" type="checkbox" id="removeImage" name="remove_image">
                                <label class="form-check-label" for="removeImage">Remove current image</label>
                            </div>
                        </div>
                    ` : ''}
                </div>
                <div class="mb-3">
                    <label for="editProductSKU" class="form-label">SKU</label>
                    <input type="text" class="form-control" id="editProductSKU" name="sku" value="${escapeHtml(product.sku || '')}">
                </div>
                <div class="mb-3">
                    <label for="editProductBarcode" class="form-label">Barcode</label>
                    <input type="text" class="form-control" id="editProductBarcode" name="barcode" value="${escapeHtml(product.barcode || '')}">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="mb-3">
                    <label for="editBuyingPrice" class="form-label">Buying Price *</label>
                    <div class="input-group">
                        <span class="input-group-text">${escapeHtml((shop && shop.currency) || 'PKR')}</span>
                        <input type="number" step="0.01" class="form-control" id="editBuyingPrice" name="buying_price" value="${Number(product.buying_price || 0).toFixed(2)}" required>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="mb-3">
                    <label for="editSellingPrice" class="form-label">Selling Price *</label>
                    <div class="input-group">
                        <span class="input-group-text">${escapeHtml((shop && shop.currency) || 'PKR')}</span>
                        <input type="number" step="0.01" class="form-control" id="editSellingPrice" name="selling_price" value="${Number(product.selling_price || 0).toFixed(2)}" required>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="mb-3">
                    <label for="editTaxPercent" class="form-label">Tax (%)</label>
                    <input type="number" step="0.01" class="form-control" id="editTaxPercent" name="tax_percent" value="${product.tax_percent || 0}">
                </div>
            </div>
        </div>
    `;

            // Set the product ID in the hidden field
            document.getElementById('editProductId').value = product.id;

            // Initialize image preview for edit form
            document.getElementById('editProductImage')?.addEventListener('change', function (e) {
                const file = e.target.files[0];
                if (file) {
                    const reader = new FileReader();
                    reader.onload = function (event) {
                        const previewContainer = document.createElement('div');
                        previewContainer.className = 'mt-2';
                        previewContainer.innerHTML = `<img src="${event.target.result}" alt="Preview" style="max-height: 150px; max-width: 100%; border-radius: 0.375rem;">`;
                        this.parentNode.appendChild(previewContainer);
                    };
                    reader.readAsDataURL(file);
                }
            });
        }

        function toggleProductStatus(productId) {
            if (!confirm('Are you sure you want to change the status of this product?')) return;

            fetch(`/products/${productId}/toggle-status`, {
                method: 'POST'
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showToast('Product status updated successfully!', 'success');
                        setTimeout(() => location.reload(), 1000);
                    } else {
                        showToast(data.message || 'Error updating status', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showToast('An error occurred', 'error');
                });
        }

        function filterProducts() {
            const searchTerm = document.getElementById('productSearch').value.toLowerCase();
            const categoryFilter = document.getElementById('categoryFilter').value.toLowerCase();
            const statusFilter = document.getElementById('statusFilter').value.toLowerCase();

            document.querySelectorAll('#productsTable tbody tr').forEach(row => {
                if (row.getAttribute('data-product-id') === null) return; // Skip the "no products" row

                const name = row.querySelector('td:nth-child(3)').textContent.toLowerCase();
                const sku = row.querySelector('td:nth-child(4)').textContent.toLowerCase();
                const category = row.querySelector('td:nth-child(5)').textContent.toLowerCase();
                const statusBadge = row.querySelector('td:nth-child(9) .badge');
                const status = statusBadge ? statusBadge.textContent.trim().toLowerCase() : '';

                // Search across multiple fields (name, SKU, category)
                const matchesSearch = searchTerm === '' ||
                    name.includes(searchTerm) ||
                    sku.includes(searchTerm) ||
                    category.includes(searchTerm);

                const matchesCategory = categoryFilter === '' || category === categoryFilter;

                // Fix status filter comparison
                let statusMatch = true;
                if (statusFilter !== '') {
                    if (statusFilter === 'active') {
                        statusMatch = status.includes('active');
                    } else if (statusFilter === 'inactive') {
                        statusMatch = status.includes('inactive');
                    }
                }

                row.style.display = matchesSearch && matchesCategory && statusMatch ? '' : 'none';
            });

            // Show "no products" message if all rows are hidden
            const visibleRows = document.querySelectorAll('#productsTable tbody tr[style=""]').length;
            const noProductsRow = document.querySelector('#productsTable tbody tr[data-product-id=""]');
            if (noProductsRow) {
                noProductsRow.style.display = visibleRows === 0 ? '' : 'none';
            }
        }

        function showToast(message, type = 'success') {
            // Simple alert for now - replace with a proper toast notification if needed
            alert(`${type.toUpperCase()}: ${message}`);
        }

        function escapeHtml(unsafe) {
            if (!unsafe) return '';
            return unsafe
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }
    </script>